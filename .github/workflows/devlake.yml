name: Terraform Deploy

on:
  workflow_dispatch:
  # push:
  #   branches:
  #     - '**'
  #     - main   
  # pull_request:
  #   branches:
  #     - main

jobs:
  terraform:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: write
      pull-requests: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python (for Checkov)
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install Checkov
        run: pip install checkov

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3
      - name: SetUp AWS
        uses: aws-actions/configure-aws-credentials@v4.1.0
        with:
          aws-region: ${{ secrets.AWS_REGION }}
          role-to-assume: ${{ secrets.OIDC_ROLE }}


      - name: Set up TFLint
        uses: terraform-linters/setup-tflint@v4
        with:
         tflint_version: latest

      - name: Initialize TFLint
        run: tflint --init

      - name: Run TFLint
        run: tflint -f compact

      - name: Terraform Init
        run: terraform init

      - name: Terraform Validate
        run: terraform validate

      - name: Run Checkov Security Scan
        run: checkov -d . --framework terraform

      # - name: Generate Terraform Documentation
      #   uses: terraform-docs/gh-actions@v1.4.1
      #   with:
      #     working-dir: .
      #     output-file: README.md
      #     output-method: inject
      #     git-push: "true"
      #     git-commit-message: "docs: Update Terraform documentation"
      #     git-commit-author: "GitHub Actions <actions@github.com>"
      #     git-commit-email: "actions@github.com"
      #     git-branch: "main"
      #     github-token: ${{ secrets.REPO_TOKEN }}
        
      #- name: Terraform Plan
       # run: terraform plan

      - name: Terraform Destroy
        run: terraform destroy -auto-approve
